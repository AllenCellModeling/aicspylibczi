on:
  push:
    branches:
      - "feature/simplify-build"
  schedule:
    - cron: 0 18 * * 1

env:
  CIBW_TEST_COMMAND: pytest aicspylibczi/tests
  CIBW_TEST_EXTRAS: test

name: Python Main Build
jobs:
  python-test:
    runs-on: ${{ matrix.os }}
    strategy:
      max-parallel: 6
      matrix:
        python-version: [3.7, 3.8, 3.9]
        os: [ubuntu-latest, windows-2019, macOS-10.15, macOS-11.0]
    steps:
      - uses: actions/checkout@v1
        with:
          submodules: true
      - name: setup python
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install .[test]
      - name: Test with pytest
        run: |
          pytest --cov-report xml --cov=aicspylibczi aicspylibczi/tests
      - name: Upload codecov
        uses: codecov/codecov-action@v1

  lint:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v1
        with:
          submodules: true
      - name: Set up Python
        uses: actions/setup-python@v1
        with:
          python-version: 3.7
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install .[test]
      - name: Lint with flake8
        run: |
          flake8 aicspylibczi --count --verbose --max-line-length=127 --show-source --statistics

  build_sdist:
    name: Build SDist
    needs: [python-test, lint]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true

    - name: Build SDist
      run: pipx run build --sdist

    - name: Check metadata
      run: pipx run twine check dist/*

    - uses: actions/upload-artifact@v2
      with:
        path: dist/*.tar.gz


  build_wheels:
    name: Wheels on ${{ matrix.os }}
    needs: [python-test, lint]
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true

    - uses: pypa/cibuildwheel@v1.12.0
      env:
        CIBW_ARCHS_MACOS: auto universal2
        # CIBW_TEST_SKIP: "*universal2:arm64"
        CIBW_TEST_EXTRAS: test
        CIBW_TEST_COMMAND: pytest aicspylibczi/tests

    - name: Verify clean directory
      run: git diff --exit-code
      shell: bash

    - name: Upload wheels
      uses: actions/upload-artifact@v2
      with:
        path: wheelhouse/*.whl

  # upload_all:
  #   name: Upload if release
  #   needs: [build_wheels, build_sdist]
  #   runs-on: ubuntu-latest
  #   # TODO change this to when tagged
  #   if: github.event_name == 'release' && github.event.action == 'published'

  #   steps:
  #   - uses: actions/setup-python@v2

  #   - uses: actions/download-artifact@v2
  #     with:
  #       name: artifact
  #       path: dist

  #   - uses: pypa/gh-action-pypi-publish@v1.4.2
  #     with:
  #       user: __token__
  #       password: ${{ secrets.PYPI_TOKEN }}