name: Wheels

on: [push, pull_request]

jobs:
  build-wheels:
    name: Build Wheel on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    env:
      CIBW_TEST_COMMAND: pytest --pyargs aicspylibczi/tests/
      CIBW_TEST_REQUIRES: pytest
      CIBW_SKIP: "*27* pp* *35* *36*"
      CIBW_ENVIRONMENT_MACOS: 'MACOSX_DEPLOYMENT_TARGET=10.9 CFLAGS="$CFLAGS -Wno-implicit-function-declaration"'

    steps:
      - uses: actions/checkout@v1
        with:
          submodules: true
      - name: Set up Python
        uses: actions/setup-python@v1
        with:
          python-version: 3.9
      - name: Setup CMake
        uses: jwlawson/actions-setup-cmake@v1.8
      - name: Install cibuildwheel
        run: |
          python -m pip install cibuildwheel==1.10.0 wheel
      - name: Build wheel
        run: |
          python -m cibuildwheel --output-dir wheelhouse
      - uses: actions/upload-artifact@v1
        with:
          name: wheels
          path: ./wheelhouse

  build-sdist:
    name: Build source distribution
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
        with:
          submodules: true
      - name: Set up Python
        uses: actions/setup-python@v1
        with:
          python-version: 3.9
      - name: Setup CMake
        uses: jwlawson/actions-setup-cmake@v1.8
      - name: Build sdist
        run: python setup.py sdist
      - name: Test Install
        run: pip install dist/aicspylibczi*.tar.gz

      - uses: actions/upload-artifact@v2
        with:
          path: dist/*.tar.gz

  test-dist-pypi:
    needs: [build-wheels, build-sdist]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v1
        with:
          name: artifact
          path: dist
      - uses: actions/download-artifact@v1
        with:
          name: wheels
          path: dist

      - name: Log created wheels
        run: |
          ls
          ls dist

  upload-pypi:
    needs: [build-wheels, build-sdist]
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags/v')
    steps:
      - uses: actions/download-artifact@v1
        with:
          name: artifact
          path: dist
      - uses: actions/download-artifact@v1
        with:
          name: wheels
          path: dist

      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@master
        with:
          user: aicspypi
          password: ${{ secrets.PYPI_TOKEN }}
